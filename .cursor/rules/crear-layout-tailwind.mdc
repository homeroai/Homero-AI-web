---
description: 
globs: 
alwaysApply: false
---
Rule Type: Manual
Descripción: Genera un layout base (`src/layouts/BaseLayout.tsx`) con Navbar, Footer y soporte Dark Mode.

----  
# Instrucciones para Cursor:
Cuando pongas `@crear-layout BaseLayout`:

1. Crea (si no existe) la carpeta `src/layouts/`.
2. Genera `src/layouts/BaseLayout.tsx` con:

```tsx
import React, { ReactNode, useState, useEffect } from 'react'
import Head from 'next/head'

// Ejemplo de contexto simple para Dark Mode
export const ThemeContext = React.createContext<{ dark: boolean; toggle: () => void }>({
  dark: true,
  toggle: () => {}
})

export const BaseLayout: React.FC<{ children: ReactNode }> = ({ children }) => {
  const [dark, setDark] = useState(true)

  useEffect(() => {
    if (dark) document.documentElement.classList.add('dark')
    else document.documentElement.classList.remove('dark')
  }, [dark])

  const toggle = () => setDark(prev => !prev)

  return (
    <ThemeContext.Provider value={{ dark, toggle }}>
      <Head>
        <title>Homero AI</title>
        <meta name="description" content="Plataforma de automatización inteligente" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200">
        <header className="w-full flex justify-between items-center px-6 py-4 border-b dark:border-gray-700">
          <h1 className="text-2xl font-bold">Homero AI</h1>
          <button
            onClick={toggle}
            className="px-3 py-1 bg-gray-200 dark:bg-gray-700 rounded"
          >
            {dark ? 'Light Mode' : 'Dark Mode'}
          </button>
        </header>

        <main className="p-6">{children}</main>

        <footer className="w-full border-t dark:border-gray-700 p-4 text-center text-sm">
          &copy; {new Date().getFullYear()} Homero AI. Todos los derechos reservados.
        </footer>
      </div>
    </ThemeContext.Provider>
  )
}

export default BaseLayout